# This is a basic workflow to help you get started with Actions

name: jc2server

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      uses: FranzDiebold/github-env-vars-action@v1.2.0
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
    - run: npm install gamedig -g
    # Runs a single command using the runners shell
    - name: linuxgsm.sh pre-test setup
      run: |
        chmod +x lgsm/functions/*
    - name: ./linuxgsm.sh (get-opt)
      run: bash ./linuxgsm.sh       
    - name: ./linuxgsm.sh list
      run: bash ./linuxgsm.sh list     
    - name: ./linuxgsm.sh jc2server
      run: bash ./linuxgsm.sh jc2server
    - name: ./jc2server (get-opt)
      run: bash ./jc2server
    - name: ./jc2server dev
      run: bash ./jc2server dev
    # Install
    - name: ./jc2server auto-install
      run: bash ./jc2server auto-install
    # Start. Stop, Restart
    - name: ./jc2server start (no ip set)
      run: bash .github/exitcode.sh "./jc2server start" "1"
    - name: Insert IP address in to config.lua
      run: sed -i "/BindIP/c\BindIP                      = \"127.0.0.1\"," "serverfiles/config.lua"      
    - name: ./jc2server start
      run: bash ./jc2server start
    - name: ./jc2server start (already online)
      run: bash .github/exitcode.sh "./jc2server start" "2"    
    - name: ./jc2server restart
      run: bash ./jc2server restart
    - name: ./jc2server stop
      run: bash ./jc2server stop
    - name: ./jc2server restart (server offline)
      run: bash ./jc2server restart
    # update  
    - name: ./jc2server update (no update required)
      run: bash ./jc2server update
    - name: ./jc2server update (update required - online)
      run: |
        sed -i 's/[0-9]\+/0/' "serverfiles/steamapps/appmanifest_261140.acf"
        bash ./jc2server update
    - name: ./jc2server update (update required - offline)
      run: |
        sed -i 's/[0-9]\+/0/' "serverfiles/steamapps/appmanifest_261140.acf"
        bash ./jc2server stop
        bash ./jc2server update
    - name: ./jc2server update (remove appmanifest file)
      run: |
        rm --verbose "serverfiles/steamapps/appmanifest_261140.acf"
        bash ./jc2server update   
    - name: ./jc2server force-update (offline)
      run: bash ./jc2server force-update
    - name: ./jc2server force-update (online)
      run: |
        bash ./jc2server start
        bash ./jc2server update
    - name: ./jc2server validate (online)
      run: bash ./jc2server validate
    - name: ./jc2server validate (offline)
      run: |
        bash ./jc2server stop
        bash ./jc2server validate
    - name: ./jc2server update-lgsm
      run: bash ./jc2server update-lgsm
    - name: ./jc2server monitor (offline)
      run: bash ./jc2server monitor
    - name: ./jc2server monitor (offline with lockfile)
      run: |
        bash date '+%s' > "${lockdir}/${selfname}.lock"
        bash ./jc2server monitor
    - name: ./jc2server monitor (online)
      run: |
        bash ./jc2server start
        bash ./jc2server monitor     
